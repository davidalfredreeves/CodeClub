import Classes

##print(Classes.Echo("This is a string!"))
##print("EXPECTED: 'This is a string!'")
##print(Classes.Echo(25 + 2))
##print("EXPECTED: 'Error'")
##print(Classes.Echo("123"))
##print("EXPECTED: '123'")
##print(Classes.Echo(123))
##print("Expected: 'Error'")
##
##print(Classes.Box.put("Object"))
##print("EXPECTED: 'False'") 
##print(Classes.Box.open())
##print("EXPECTED: 'True'")
##print(Classes.Box.open())
##print("EXPECTED: 'False'")
##print(Classes.Box.put("Object"))
##print("EXPECTED: 'True'")
##print(Classes.Box.put("AnotherObject"))
##print("EXPECTED: 'False'")
##print(Classes.Box.close())
##print("EXPECTED: 'True'")
##print(Classes.Box.close())
##print("EXPECTED: 'False'")
##print(Classes.Box.peak())
##print("EXPECTED: 'Object'")
##print(Classes.Box.get())
##print("EXPECTED: 'False'")
##print(Classes.Box.open())
##print("EXPECTED: 'True'")
##print(Classes.Box.get())
##print("EXPECTED: 'Object'")
##print(Classes.Box.peak())
##print("EXPECTED: 'None'")
##
##steve = Classes.Dancer("Steve", "Dorah")
##dorah = Classes.Dancer("Dorah", "Steve")
##print(steve)
##print("EXPECTED: 'Steve'")
##print(dorah)
##print("EXPECTED: 'Dorah'")
##print(steve.dance())
##print("EXPECTED: 'Steve dances with Dorah'")
##print(dorah.dance())
##print("EXPECTED: 'Dorah dances with Steve'")
##cloe = Classes.Dancer("Cloe")
##print(cloe.dance())
##print("EXPECTED: 'Cloe dances on their own'")
##print(steve.pair(cloe))
##print("EXPECTED: 'False'")
##bob = Classes.Dancer("Bob")
##print(bob.pair(cloe))
##print("EXPECTED: 'True'")
##print(cloe.dance())
##print("Expected: 'Cloe dances with Bob'")
##
##code1 = Classes.Encryptor([1,2,3])
##print(code1.encrypt("Abcde"))
##print("EXPECTED: 0103050406")
##print(code1.decrypt(code1.encrypt("EDCBa")))
##print("EXPECTED: edcba")
##
##carl = Classes.Employee("001", "Carl", "Nuclear Technician")
##print(carl)
##print("EXPECTED: 'ID: 001 NAME: Carl JOB TITLE: Nuclear Technician " \
##      "MANAGER: None")
##lenny = Classes.Employee("002", "Lenny", "Homer's boss")
##print(lenny)
##print("EXPECTED: 'ID: 002 NAME: Lenny JOB TITLE: Homer's boss " \
##      "MANAGER: None")
##print(carl.equals(lenny))
##print("EXPECTED: 'False'")
##smithers = Classes.Manager("101", "Smithers", "Burns' Assistant", "Mr. Burns", [carl.name, lenny.name])
##print(smithers)
##print("EXPECTED: 'ID: 101 NAME: Smithers Job Title: Burns' Assistant " \
##      "MANAGER: Mr. Burns EMPLOYEES: Carl, Lenny")
##homer = Classes.Employee("003", "Homer", "Idiot")
##print(homer)
##print("EXPECTED: ID: 003 NAME: Homer JOB TITLE: Idiot " \
##      "MANAGER: None")
##smithers.addEmployee(homer)
##print(homer)
##print("EXPECTED: ID: 003 NAME: Homer JOB TITLE: Idiot " \
##      "MANAGER: Smithers")
##grimes = Classes.Manager("102)", "Grimes", "Homer's temporary boss", "Smithers")
##print(grimes)
##print("EXPECTED: ID: 102 NAME: Grimes JOB TITLE: Homer's temporary " \
##      "boss MANAGER: Smithers EMPLOYEES: None")
##homer.setManager(grimes)
##print(homer)
##print("EXPECTED: ID: 003 NAME: Homer JOB TITLE: Idiot " \
##      "MANAGER: Grimes")

print(Classes.Fraction(1,2))
print("EXPECTED: 1/2")
print(Classes.Fraction(2,4))
print("EXPECTED: 1/2")
print(Classes.Fraction(4,16))
print("EXPECTED: 1/4")
print(Classes.Fraction(2,2))
print("EXPECTED: 1")
print(Classes.Fraction(3,2))
print("EXPECTED: 1 1/2")
a = Classes.Fraction(2,5)
print(a)
print("EXPECTED: 2/5")
b = Classes.Fraction(3,10)
print(b)
print("EXPECTED: 3/10")
print(a + b)
print("EXPECTED: 7/10")
print(a - b)
print("EXPECTED: 1/10")
print(a * b)
print("EXPECTED: 6/50")
print(a / b)
print("EXPECTED: 1 1/3")
print(a > b)
print("EXPECTED: True")
print(a >= b)
print("EXPECTED: True")
print(a == b)
print("EXPECTED: False")
print(a <= b)
print("EXPECTED: False")
print(a < b)
print("EXPECTED: False")
print(Classes.Fraction(80,100) == Classes.Fraction(40,50))
print("EXPECTED: True")
print(Classes.Fraction(80,100) <= Classes.Fraction(40,50))
print("EXPECTED: True")
print(Classes.Fraction(80,100) >= Classes.Fraction(40,50))
print("EXPECTED: True")
print(Classes.Fraction(4,7) < Classes.Fraction(3,7))
print("EXPECTED: False")
print(Classes.Fraction(75,25))
print("EXPECTED: 3")
print(Classes.Fraction(12,9) + Classes.Fraction(4,9))
print("EXPECTED: 1 7/9")
print(Classes.Fraction(12,9) - Classes.Fraction(4,9))
print("EXPECTED: 8/9")
